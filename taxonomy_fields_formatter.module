<?php

/**
 * @file
 * Taxonomy fields formatter module main file.
 */

/**
 * Implements hook_entity_info_alter().
 * @see taxonomy_entity_info()
 */
function taxonomy_fields_formatter_entity_info_alter(&$entity_info) {
  $entity_info['taxonomy_term']['view modes']['entity'] = array(
    'label' => t('Entity'),
    'custom settings' => TRUE,
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function taxonomy_fields_formatter_field_formatter_info() {
  return array(
    'taxonomy_term_entity' => array(
      'label' => t('Entity'),
      'field types' => array('taxonomy_term_reference'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 * @see taxonomy_fields_formatter_field_formatter_info()
 */
function taxonomy_fields_formatter_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  if ($display['type'] == 'taxonomy_term_entity') {
    foreach ($items as $delta => $item) {
      if ($term = taxonomy_term_load($item['tid'])) {
        $element[$delta] = array(
          '#markup' => drupal_render(taxonomy_term_view($term, 'entity')),
        );
      }
    }
  }
  return $element;
}

/**
 * Implements hook_preprocess_HOOK().
 * @see template_preprocess_taxonomy_term()
 * @see taxonomy_theme()
 */
function taxonomy_fields_formatter_preprocess_taxonomy_term(&$variables) {
  if ($variables['view_mode'] == 'entity') {
    $variables['page'] = TRUE;
  }
}
